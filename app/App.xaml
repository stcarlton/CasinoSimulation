<Application x:Class="CasinoSimulation.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CasinoSimulation"
             Startup="Application_Startup">
    <Application.Resources>

        <!--for controlling visibility of UI elements-->
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />

        <!--label format-->
        <Style x:Key="LabelFormat" TargetType="Label">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="36"/>
        </Style>
        
        <!--button format-->
        <Style x:Key="GameButton" TargetType="Button">
            <Setter Property="Width" Value="120"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="FontFamily" Value="Franklin Gothic Demi Cond"/>
            <Setter Property="BorderBrush" Value="SteelBlue"/>
            <Setter Property="Background" Value="DimGray"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="36"/>
            <Setter Property="BorderThickness" Value="4"/>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="4"/>
                </Style>
            </Style.Resources>
        </Style>
        
        <!--reusable graphical UI for chips-->
        <Style x:Key="GraphicalChipStack" TargetType="ListView">
            <Setter Property="Width" Value="130"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="White" Opacity="0"/>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsControl.ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" VerticalAlignment="Bottom" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5" >
                            <StackPanel.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="180"/>
                                    <TranslateTransform Y="-60"/>
                                </TransformGroup>
                            </StackPanel.RenderTransform>
                        </StackPanel>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Margin" Value="0, -44, 0, 0"></Setter>
                        <Setter Property="Height" Value="50"></Setter>
                        <Setter Property="Width" Value="110"></Setter>
                        <Setter Property="LayoutTransform">
                            <Setter.Value>
                                <RotateTransform Angle="180"/>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical">
                            <Image Source="{Binding ImageData}" RenderOptions.BitmapScalingMode="Fant" Width="86" Height="40" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,0,0" />
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--reusable graphical UI for a hand of cards-->
        <Style x:Key="GraphicalHandDisplay" TargetType="ListView">
            <Setter Property="Width" Value="600"/>
            <Setter Property="Height" Value="160"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="White" Opacity="0"/>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsControl.ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Margin" Value="0, 0, -90, 0"></Setter>
                        <Setter Property="Height" Value="155"></Setter>
                        <Setter Property="Width" Value="115"></Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical">
                            <Image Source="{Binding ImageData}" RenderOptions.BitmapScalingMode="Fant" Width="100" Height="145.2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0" />
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
                
        <!--animation to deal cards-->
        <Style x:Key="DealAnimation" TargetType="Image">
            <Setter Property="Source" Value="/View/Images/Blackjack/Cards/Card_Back_Blue.png"/>
            <Setter Property="Panel.ZIndex" Value="1"/>
            <Setter Property="Height" Value="145.2"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="325,-300,0,0"/>
            <Setter Property="Grid.ColumnSpan" Value="2"/>
            <Setter Property="Grid.Column" Value="3"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding AnimateDealTrigger}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" From="0" To="550" Duration="0:0:0.4" RepeatBehavior="1x" DecelerationRatio="0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="0" To="-400" Duration="0:0:0.4" RepeatBehavior="1x" DecelerationRatio="0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" From="550" To="0" Duration="0:0:0" BeginTime="0:0:0.4" RepeatBehavior="1x"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="-400" To="0" Duration="0:0:0" BeginTime="0:0:0.4" RepeatBehavior="1x"/>

                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" From="0" To="270" Duration="0:0:0.4" BeginTime="0:0:0.4" RepeatBehavior="1x" DecelerationRatio="0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="0" To="-400" Duration="0:0:0.4"  BeginTime="0:0:0.4" RepeatBehavior="1x" DecelerationRatio="0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" From="270" To="0" Duration="0:0:0" BeginTime="0:0:0.8" RepeatBehavior="1x"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="-400" To="0" Duration="0:0:0" BeginTime="0:0:0.8" RepeatBehavior="1x"/>

                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" From="0" To="550" Duration="0:0:0.4" BeginTime="0:0:0.8" RepeatBehavior="1x" DecelerationRatio="0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="0" To="-400" Duration="0:0:0.4"  BeginTime="0:0:0.8" RepeatBehavior="1x" DecelerationRatio="0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" From="550" To="0" Duration="0:0:0" BeginTime="0:0:1.2" RepeatBehavior="1x"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="-400" To="0" Duration="0:0:0" BeginTime="0:0:1.2" RepeatBehavior="1x"/>

                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" From="0" To="270" Duration="0:0:0.4" BeginTime="0:0:1.2" RepeatBehavior="1x" DecelerationRatio="0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="0" To="-400" Duration="0:0:0.4"  BeginTime="0:0:1.2" RepeatBehavior="1x" DecelerationRatio="0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" From="270" To="0" Duration="0:0:0" BeginTime="0:0:1.6" RepeatBehavior="1x"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="-400" To="0" Duration="0:0:0" BeginTime="0:0:1.6" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!--animation to hit player-->
        <Style x:Key="HitPlayerAnimation" TargetType="Image">
            <Setter Property="Source" Value="/View/Images/Blackjack/Cards/Card_Back_Blue.png"/>
            <Setter Property="Panel.ZIndex" Value="1"/>
            <Setter Property="Height" Value="145.2"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="325,-300,0,0"/>
            <Setter Property="Grid.ColumnSpan" Value="2"/>
            <Setter Property="Grid.Column" Value="3"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding AnimateHitPlayerTrigger}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" From="0" To="550" Duration="0:0:0.4" RepeatBehavior="1x" DecelerationRatio="0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="0" To="-400" Duration="0:0:0.4" RepeatBehavior="1x" DecelerationRatio="0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" From="550" To="0" Duration="0:0:0" BeginTime="0:0:0.4" RepeatBehavior="1x"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="-400" To="0" Duration="0:0:0" BeginTime="0:0:0.4" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--animation to hit split hand-->
        <Style x:Key="HitSplitAnimation" TargetType="Image">
            <Setter Property="Source" Value="/View/Images/Blackjack/Cards/Card_Back_Blue.png"/>
            <Setter Property="Panel.ZIndex" Value="1"/>
            <Setter Property="Height" Value="145.2"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="325,-300,0,0"/>
            <Setter Property="Grid.ColumnSpan" Value="2"/>
            <Setter Property="Grid.Column" Value="3"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding AnimateHitSplitTrigger}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" From="0" To="550" Duration="0:0:0.4" RepeatBehavior="1x" DecelerationRatio="0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="0" To="80" Duration="0:0:0.4" RepeatBehavior="1x" DecelerationRatio="0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" From="550" To="0" Duration="0:0:0" BeginTime="0:0:0.4" RepeatBehavior="1x"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="80" To="0" Duration="0:0:0" BeginTime="0:0:0.4" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>
